---
import hexToRgb from "../helpers.ts";

interface Props {
	name: string;
	icon: string;
	category: string;
	color: string;
}
const { name, icon, category, color } = Astro.props;

// Load all paths for the Tech-Stack icons from our local server
const localIcons = import.meta.glob("/src/assets/tech/*", { eager: true, as: "url" });

// Decide which svg path to use if SimpleIcons does not have the tech icon we are looking for
let iconSrc;
try {
	const response = await fetch(`https://cdn.simpleicons.org/${icon}`);
	// If the fetch for the icon does not throw a 404
	if (response.ok) {
		iconSrc = `https://cdn.simpleicons.org/${icon}`;
	} else {
		iconSrc = localIcons[`/src/assets/tech/${icon}.svg`] || "";
	}
} catch (error) {
	// Resort to our local icons on error
	iconSrc = localIcons[`/src/assets/tech/${icon}.svg`] || "";
}

const rgb = hexToRgb(color);
const backgroundColorHover = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, 0.15)`;
const backgroundColorNormal = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, 0.08)`;
const borderColorHover = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, 0.5)`;
const shadowColor = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, 0.2)`;
---

<div
	class="tech-item group relative flex flex-col items-center justify-center gap-2 rounded-lg border p-3 text-center transition-all duration-200 hover:scale-105"
	data-category={category}
	style={`
        background-color: ${backgroundColorNormal};
        border-color: rgba(71, 85, 105, 0.5);
        --hover-bg: ${backgroundColorHover};
        --hover-border: ${borderColorHover};
        --hover-shadow: 0 8px 25px -8px ${shadowColor};
    `}
>
	<div class="relative flex h-8 w-8 items-center justify-center">
		<img
			height="36"
			width="36"
			src={iconSrc}
			alt={`${name} icon`}
			class="relative z-10 h-full w-full object-contain brightness-90 filter transition-all duration-200 group-hover:brightness-110"
		/>
		<!-- Subtle glow effect behind icon -->
		<div
			class="absolute inset-0 rounded-full opacity-0 blur-sm group-hover:opacity-30"
			style={`background: radial-gradient(circle, ${color}40, transparent 70%);`}
		>
		</div>
	</div>

	<span class="text-xs text-slate-300 transition-colors group-hover:text-white">{name}</span>
</div>

<style>
	.tech-item {
		width: 90px;
		height: 90px;
	}

	.tech-item:hover {
		background-color: var(--hover-bg) !important;
		border-color: var(--hover-border) !important;
		box-shadow: var(--hover-shadow);
	}

	.tech-item::before {
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		border-radius: inherit;
		background: linear-gradient(135deg, rgba(255, 255, 255, 0.05), transparent);
		opacity: 0;
		pointer-events: none;
		transition: opacity 0.2s;
	}

	.tech-item:hover::before {
		opacity: 1;
	}
</style>
