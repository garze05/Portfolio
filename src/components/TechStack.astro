---
import Tech from "./Tech.astro";

const technologies = [
	// Languages
	{ name: "JavaScript", icon: "javascript", category: "Languages" },
	// { name: "TypeScript", icon: "typescript", category: "Languages" },
	{ name: "Python", icon: "python", category: "Languages" },
	{ name: "SQL", icon: "sql", category: "Languages" },
	// { name: "Java", icon: "java", category: "Languages" },

	// Frontend
	{ name: "HTML5", icon: "html5", category: "Frontend" },
	{ name: "CSS3", icon: "css", category: "Frontend" },
	{ name: "Tailwind CSS", icon: "tailwindcss", category: "Frontend" },
	{ name: "Bootstrap", icon: "bootstrap", category: "Frontend" },
	{ name: "React", icon: "react", category: "Frontend" },
	{ name: "Astro", icon: "astro", category: "Frontend" },
	// { name: "Redux", icon: "redux", category: "Frontend" },

	// Backend
	{ name: "Node.js", icon: "nodedotjs", category: "Backend" },
	{ name: "Express", icon: "express", category: "Backend" },
	{ name: ".NET", icon: "dotnet", category: "Backend" },
	{ name: "JWT", icon: "jsonwebtokens", category: "Backend" },
	{ name: "PM2", icon: "pm2", category: "Backend" },

	// Databases
	// { name: "PostgreSQL", icon: "postgresql", category: "Databases" },
	{ name: "MySQL", icon: "mysql", category: "Databases" },
	{ name: "SQL Server", icon: "sqlserver", category: "Databases" },
	// { name: "MongoDB", icon: "mongodb", category: "Databases" },
	{ name: "Prisma ORM", icon: "prisma", category: "Databases", color: "#707070" },

	// Cloud
	{ name: "Netlify", icon: "netlify", category: "Cloud" },
	{ name: "Oracle Cloud", icon: "oracle", category: "Cloud" },

	// Tooling / DevOps
	{ name: "Git", icon: "git", category: "Tooling / DevOps" },
	{ name: "GitHub", icon: "github", category: "Tooling / DevOps" },
	{ name: "Linux", icon: "linux", category: "Tooling / DevOps" },
	{ name: "Docker", icon: "docker", category: "Tooling / DevOps" },
	{
		name: "GitHub Actions",
		icon: "githubactions",
		category: "Tooling / DevOps"
	},
	{ name: "Figma", icon: "figma", category: "Tooling / DevOps" }
];

const categories = ["Languages", "Frontend", "Backend", "Databases", "Cloud", "Tooling / DevOps"];
---

<div class="space-y-4">
	{
		categories
			.filter((cat) => technologies.some((t) => t.category === cat))
			.map((category) => {
				const items = technologies.filter((t) => t.category === category);
				const total = items.length;
				return (
					<details class="cat group" open>
						<summary class="flex cursor-pointer items-center justify-between gap-3 px-3 py-2 select-none">
							<span class="mb-2 flex items-center gap-2">
								<span class="text-[11px] font-semibold tracking-wide text-slate-300 uppercase">
									{category}
								</span>
								<span class="rounded bg-slate-700/60 px-1.5 py-[2px] text-[10px] font-medium text-slate-300">
									{total}
								</span>
							</span>
							<span class="chevron mr-1 inline-block h-3 w-3 origin-center rotate-0 transition-transform duration-200">
								<svg viewBox="0 0 20 20" fill="none" stroke="currentColor">
									<path
										stroke-linecap="round"
										stroke-linejoin="round"
										stroke-width="2"
										d="M6 8l4 4 4-4"
									/>
								</svg>
							</span>
						</summary>
						<div class="content px-3 pt-1 pb-3">
							<div class="xs:grid-cols-5 grid grid-cols-4 items-center justify-items-center gap-3 sm:grid-cols-6 md:flex md:flex-wrap">
								{items.map((t) => (
									<Tech
										name={t.name}
										icon={t.icon}
										category={t.category}
										color={t.color}
									/>
								))}
							</div>
						</div>
					</details>
				);
			})
	}
</div>

<!-- status={t.status as "learning" | "proficient" | undefined} -->

<style>
	details.cat {
		transition:
			border-color 0.25s,
			background-color 0.25s;
	}
	details.cat[open] {
		/* background-color: rgba(255, 255, 255, 0.02); */
		border-radius: 10px;
	}
	.chevron {
		color: rgb(148 163 184);
	}
	details[open] > summary .chevron {
		transform: rotate(180deg);
	}
	@media (min-width: 768px) {
		details.cat {
			border: none;
			background: transparent;
			padding: 0;
		}
		details.cat > summary {
			cursor: default;
			padding: 0 0 0.25rem 0;
		}
		details.cat[open] {
			background: transparent;
		}
		details.cat > summary .chevron {
			display: none;
		}
	}
	summary::-webkit-details-marker {
		display: none;
	}
</style>
